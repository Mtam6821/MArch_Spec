addi R1, 4      
ls   R1, 11		#R1 = 64
sb   R0, R1		#store encode counter at mem[64]
addi R1, 1 
addi R0, 0
ls   R0, 11
addi R0, 7		#R0 = bitmask[0]
sb   R0, R1		#store bitmask[0] at mem[65]
ls   R0, 15		#clear R0
addi R0, 15		|
ls   R0, 11		|
addi R0, 0 		#R0 = bitmask[1]
addi R1, 1		
sb   R0, R1		#store bitmask[1] at mem[66]
ls   R0, 15		#clear R0
addi R0, 0
ls   R0, 11
addi R0, 7		#R0 = bitmask[2]
addi R1, 1
sb   R0, R1		#store bitmask[0] at mem[67]
ls   R0, 15		#clear R0
addi R0, 8		
ls   R0, 11
addi R0, 14		#R0 = bitmask[3]
addi R1, 1
sb   R0, R1		#store bitsmask[3] at mem[68]

#continue storing bitmasks into memory
64 = j
65...72 = bitmasks
73 = temp1
74 = temp2
75...78 = pb[0...3]